[1/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\Users\perry\Documents\GitHub\EasyDSP\device_firmware\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe C:/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 C:/Users/perry/Documents/GitHub/EasyDSP/device_firmware/build/bootloader/bootloader.bin"
Bootloader binary size 0x5200 bytes. 0x2e00 bytes (36%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/easydsp_firmware.c.obj
[3/8] Linking C static library esp-idf\main\libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable easydsp_firmware.elf
[6/8] Generating binary image from built executable
esptool.py v4.6.2
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated C:/Users/perry/Documents/GitHub/EasyDSP/device_firmware/build/easydsp_firmware.bin
[7/8] cmd.exe /C "cd /D C:\Users\perry\Documents\GitHub\EasyDSP\device_firmware\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe C:/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Users/perry/Documents/GitHub/EasyDSP/device_firmware/build/partition_table/partition-table.bin C:/Users/perry/Documents/GitHub/EasyDSP/device_firmware/build/easydsp_firmware.bin"
easydsp_firmware.bin binary size 0x31080 bytes. Smallest app partition is 0x100000 bytes. 0xcef80 bytes (81%) free.
[7/8] cmd.exe /C "cd /D C:\esp\esp-idf\components\esptool_py && C:\Espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/esp/esp-idf -D SERIAL_TOOL=C:/Espressif/python_env/idf5.1_py3.11_env/Scripts/python.exe;;C:/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32s3 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=C:/Users/perry/Documents/GitHub/EasyDSP/device_firmware/build -P C:/esp/esp-idf/components/esptool_py/run_serial_tool.cmake"
esptool esp32s3 -p COM9 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 2MB 0x0 bootloader/bootloader.bin 0x10000 easydsp_firmware.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.6.2
Serial port COM9

A fatal error occurred: Could not open COM9, the port doesn't exist
FAILED: CMakeFiles/flash C:/Users/perry/Documents/GitHub/EasyDSP/device_firmware/build/CMakeFiles/flash 
cmd.exe /C "cd /D C:\esp\esp-idf\components\esptool_py && C:\Espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/esp/esp-idf -D SERIAL_TOOL=C:/Espressif/python_env/idf5.1_py3.11_env/Scripts/python.exe;;C:/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32s3 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=C:/Users/perry/Documents/GitHub/EasyDSP/device_firmware/build -P C:/esp/esp-idf/components/esptool_py/run_serial_tool.cmake"
ninja: build stopped: subcommand failed.
