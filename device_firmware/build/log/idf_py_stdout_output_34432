[1/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\Users\perry\Documents\GitHub\EasyDSP\device_firmware\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe C:/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 C:/Users/perry/Documents/GitHub/EasyDSP/device_firmware/build/bootloader/bootloader.bin"
Bootloader binary size 0x5200 bytes. 0x2e00 bytes (36%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/easydsp_firmware.c.obj
[3/8] Linking C static library esp-idf\main\libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable easydsp_firmware.elf
[6/8] Generating binary image from built executable
esptool.py v4.6.2
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated C:/Users/perry/Documents/GitHub/EasyDSP/device_firmware/build/easydsp_firmware.bin
[7/8] cmd.exe /C "cd /D C:\Users\perry\Documents\GitHub\EasyDSP\device_firmware\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe C:/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Users/perry/Documents/GitHub/EasyDSP/device_firmware/build/partition_table/partition-table.bin C:/Users/perry/Documents/GitHub/EasyDSP/device_firmware/build/easydsp_firmware.bin"
easydsp_firmware.bin binary size 0x31020 bytes. Smallest app partition is 0x100000 bytes. 0xcefe0 bytes (81%) free.
[7/8] cmd.exe /C "cd /D C:\esp\esp-idf\components\esptool_py && C:\Espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/esp/esp-idf -D SERIAL_TOOL=C:/Espressif/python_env/idf5.1_py3.11_env/Scripts/python.exe;;C:/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32s3 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=C:/Users/perry/Documents/GitHub/EasyDSP/device_firmware/build -P C:/esp/esp-idf/components/esptool_py/run_serial_tool.cmake"
esptool esp32s3 -p COM9 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 2MB 0x0 bootloader/bootloader.bin 0x10000 easydsp_firmware.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.6.2
Serial port COM9
Connecting.........
Chip is ESP32-S3 (revision v0.1)
Features: WiFi, BLE
Crystal is 40MHz
MAC: 34:85:18:96:d0:64
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00000000 to 0x00005fff...
Flash will be erased from 0x00010000 to 0x00041fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 20992 bytes to 13327...
Writing at 0x00000000... (100 %)
Wrote 20992 bytes (13327 compressed) at 0x00000000 in 0.6 seconds (effective 277.5 kbit/s)...
Hash of data verified.
Compressed 200736 bytes to 109025...
Writing at 0x00010000... (14 %)
Writing at 0x0001cc29... (28 %)
Writing at 0x00022665... (42 %)
Writing at 0x00028ccc... (57 %)
Writing at 0x0002f255... (71 %)
Writing at 0x000370cb... (85 %)
Writing at 0x0003cc56... (100 %)
Wrote 200736 bytes (109025 compressed) at 0x00010000 in 2.6 seconds (effective 608.0 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 438.2 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
